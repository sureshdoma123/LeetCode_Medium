'''
You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.

The area of an island is the number of cells with a value 1 in the island.

Return the maximum area of an island in grid. If there is no island, return 0.  '''

class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        r=len(grid)
        c=len(grid[0])
        def dfs(grid,i,j):
            if i<0 or j<0 or i>=r or j>=c or grid[i][j]!=1:
                return 0
            grid[i][j]=2
            return (1+dfs(grid,i+1,j)+dfs(grid,i-1,j)+dfs(grid,i,j+1)+dfs(grid,i,j-1))
        
        res=0
        for i in range(r):
            for j in range(c):
                if grid[i][j] == 1:
                    res=max(res,dfs(grid,i,j))
                    print(res)
        #print(grid)
        return res
